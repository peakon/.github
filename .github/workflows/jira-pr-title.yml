name: "Jira PR Title Check"
on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      owner:
        description: "Owner of the repository"
        required: true
        default: "peakon"
      repo:
        description: "Name of the repository"
        required: true
        default: ".github"
      pull_number:
        description: "Pull request number"
        required: true
        default: "1"
jobs:
  check-title:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          retries: 3
          script: |
            let data;
            const owner = context.payload.inputs?.owner || context.repo.owner;
            const repo = context.payload.inputs?.repo || context.repo.repo;
            const pull_number = context.payload.inputs?.pull_number || context.issue.number;


            try {
              const result = await github.rest.pulls.get({ owner, repo, pull_number });

              data = result.data;
            } catch (error) {
              const ip = await github.request('https://icanhazip.com');
              console.log('IP Address: ', ip);

              throw error;
            }

            const prTitle = data.title;

            const jiraPattern = /[A-Z]+-\d+/g;


            if (prTitle.includes('[Snyk]')) {
              console.log('PR title contains [Snyk]');
              console.log('1. Labeling PR with `depdependencies` and `security`');
              const issue_number = data.number;
              const labels = ['dependencies', 'security'];
              await github.rest.issues.addLabels({owner, repo, issue_number, labels});
              if (!jiraPattern.test(prTitle)) {
                console.log('2. Adding `[PEAKON-2516]` prefix to PR title');
                const title = `[PEAKON-2516] ${prTitle}`;
                await github.rest.pulls.update({owener, repo, pull_number, title});
              }
             } else if (!jiraPattern.test(prTitle)) {
              core.setFailed('Cannot find a JIRA ticket in the PR title');
             }
